{"version":3,"sources":["webpack:///.-2/sitbne-sitegen/src/components/PostFooter/PostFooter.js","webpack:///.-2/sitbne-sitegen/src/components/AuthorInfo/AuthorInfo.js","webpack:///.-2/sitbne-sitegen/src/components/PostShare/PostShare.js","webpack:///.-2/sitbne-sitegen/src/components/GhostSubscribe/GhostSubscribe.js","webpack:///.-2/sitbne-sitegen/src/components/ReadNext/ReadNext.js","webpack:///.-2/sitbne-sitegen/src/components/Disqus/Disqus.js","webpack:///.-2/sitbne-sitegen/src/templates/post.jsx","webpack:///.-2/sitbne-sitegen/src/components/Drawer/Drawer.js","webpack:///.-2/sitbne-sitegen/src/components/SiteWrapper/SiteWrapper.js","webpack:///.-2/sitbne-sitegen/src/components/Footer/Footer.js","webpack:///.-2/sitbne-sitegen/src/components/MainHeader/MainHeader.js","webpack:///.-2/sitbne-sitegen/src/components/MainNav/MainNav.js","webpack:///.-2/sitbne-sitegen/src/components/BlogLogo/BlogLogo.js","webpack:///.-2/sitbne-sitegen/src/components/MenuButton/MenuButton.js","webpack:///.-2/sitbne-sitegen/src/components/Navigation/GetNavList.js","webpack:///.-2/sitbne-sitegen/src/components/SubscribeButton/SubscribeButton.js","webpack:///.-2/sitbne-sitegen/src/components/Navigation/Navigation.js","webpack:///.-2/sitbne-sitegen/src/components/MainContent/MainContent.js","webpack:///.-2/sitbne-sitegen/src/components/SEO/SEO.js","webpack:///.-2/sitbne-sitegen/src/components/AuthorImage/AuthorImage.js","webpack:///.-2/sitbne-sitegen/src/components/AuthorMeta/AuthorMeta.js","webpack:///.-2/sitbne-sitegen/src/components/AuthorLocation/AuthorLocation.js","webpack:///.-2/sitbne-sitegen/src/components/AuthorWebsite/AuthorWebsite.js"],"names":["PostFooter","render","children","this","props","react_default","a","createElement","className","React","Component","Bio","bio","morePostsUrl","gatsby_browser_entry","to","AuthorInfo","prefix","_this$props$author","author","uid","name","image","url","location","authorInfoUrl","AuthorLink","AuthorInfo_Bio","AuthorMeta","AuthorLocation","AuthorWebsite","PostShare","siteUrl","pathPrefix","_this$props","postNode","postPath","config","post","frontmatter","style","display","TwitterShareButton","title","fontSize","FacebookShareButton","quote","GooglePlusShareButton","GhostSubscribe","subscribers","blog","href","ReadNextStory","path","cover","excerpt","styles","backgroundImage","classes","classNames","no-cover","ReadNext","next","prev","ReadNext_ReadNextStory","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","disqusShortname","fields","slug","main_default","shortname","identifier","category_id","onNewComment","formatReadNext","value","PostTemplate","menuOpen","handleOnClick","evt","stopPropagation","closeMenu","openMenu","handleOnClose","data","_this$props$pageConte","pageContext","markdownRemark","result","id","postDefaultCategoryID","parsePost","date","tags","post_class","authorData","AuthorModel","getAuthor","authors","edges","blogAuthorId","layout","Drawer","isOpen","Helmet_default","siteTitle","SEO","postSEO","Navigation","onClose","SiteWrapper","MainHeader","MainNav","BlogLogo","logo","siteLogo","MenuButton","navigation","siteNavigation","onClick","MainContent","PostFormatting","PostHeader","PostDate","PostTags","dangerouslySetInnerHTML","__html","html","components_PostFooter_PostFooter","AuthorImage","components_AuthorInfo_AuthorInfo","components_PostShare_PostShare","pathname","components_GhostSubscribe_GhostSubscribe","components_Disqus_Disqus","components_ReadNext_ReadNext","Footer","copyright","promoteGatsby","pageQuery","react__WEBPACK_IMPORTED_MODULE_1___default","_this$props$copyright","label","year","Date","getFullYear","show","gatsby__WEBPACK_IMPORTED_MODULE_2__","src","alt","GetNavList","NavList","primaryText","component","Link","divider","userLinks","forEach","link","SubscribeButton","__rest","s","e","t","p","Object","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","i","length","Divider","Subheader","ListItem","remainingProps","role","mapToListParts","item","index","key","isValidElement","subheader","nestedItems","assign","map","navItems","components_SubscribeButton_SubscribeButton","siteRss","description","postURL","postMeta","siteDescription","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","alternateName","siteTitleAlt","itemListElement","position","@id","headline","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","type","JSON","stringify","property","siteFBAppID","userTwitter","react__WEBPACK_IMPORTED_MODULE_2___default"],"mappings":"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","file":"component---src-templates-post-jsx-09c2cf56c7e461e7974e.js","sourcesContent":["import React from \"react\";\r\nimport \"./PostFooter.css\";\r\nclass PostFooter extends React.Component {\r\n    render() {\r\n        const { children } = this.props;\r\n        return <footer className=\"post-footer\">{children}</footer>;\r\n    }\r\n}\r\nexport default PostFooter;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./AuthorInfo.css\";\r\nimport AuthorMeta from \"../../components/AuthorMeta/AuthorMeta\";\r\nimport AuthorLocation from \"../AuthorLocation/AuthorLocation\";\r\nimport AuthorWebsite from \"../AuthorWebsite/AuthorWebsite\";\r\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\r\nconst Bio = props => {\r\n    const { bio, morePostsUrl } = props;\r\n    if (bio) {\r\n        return <p>{bio}</p>;\r\n    }\r\n    return (<p>\n      Read <Link to={morePostsUrl}>more posts</Link> by this author.\n    </p>);\r\n};\r\nclass AuthorInfo extends React.Component {\r\n    render() {\r\n        const { prefix } = this.props;\r\n        const { uid, name, image, bio, url, location } = this.props.author;\r\n        const authorInfoUrl = prefix ? `${prefix}/${uid}` : uid;\r\n        if (image) {\r\n            return (<section className=\"author\">\n          <h4>\n            <AuthorLink url={authorInfoUrl} name={name}/>\n          </h4>\n          <Bio bio={bio} morePostsUrl={authorInfoUrl}/>\n          <AuthorMeta>\n            <AuthorLocation location={location}/>\n            <AuthorWebsite url={url}/>\n          </AuthorMeta>\n        </section>);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default AuthorInfo;\r\n","import React from \"react\";\r\n//import { ShareButtons } from \"react-share\";\r\nimport { FacebookShareButton, GooglePlusShareButton,TwitterShareButton } from \"react-share\";\r\nimport \"./PostShare.css\";\r\nconst formatSiteUrl = (siteUrl, pathPrefix, path) => siteUrl + (pathPrefix === \"/\" ? \"\" : pathPrefix) + path;\r\n// const getCover = post => {\r\n//   const { cover } = post;\r\n//   if (cover && cover.childImageSharp && cover.childImageSharp.original) {\r\n//     return cover.childImageSharp.original.src;\r\n//   }\r\n//   return \"\";\r\n// };\r\nclass PostShare extends React.Component {\r\n    render() {\r\n        const { postNode, postPath, config } = this.props;\r\n        const post = postNode.frontmatter;\r\n        const url = formatSiteUrl(config.siteUrl, config.pathPrefix, postPath);\r\n        /* const { FacebookShareButton, GooglePlusShareButton, \r\n        // PinterestShareButton,\r\n        TwitterShareButton } = ShareButtons; */\r\n        return (<section className=\"share\">\n        <h4>Share this post</h4>\n        <div style={{ display: \"flex\" }}>\n          <TwitterShareButton url={url} title={post.title}>\n            <a className=\"icon-twitter\" style={{ fontSize: \"1.4em\" }}>\n              <span className=\"hidden\">Twitter</span>\n            </a>\n          </TwitterShareButton>\n          <FacebookShareButton url={url} quote={post.title}>\n            <a className=\"icon-facebook\" style={{ fontSize: \"1.4em\" }}>\n              <span className=\"hidden\">Facebook</span>\n            </a>\n          </FacebookShareButton>\n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          <GooglePlusShareButton url={url}>\n            <a className=\"icon-google-plus\" style={{ fontSize: \"1.4em\" }}>\n              <span className=\"hidden\">Google+</span>\n            </a>\n          </GooglePlusShareButton>\n        </div>\n      </section>);\r\n    }\r\n}\r\nexport default PostShare;\r\n","import React from \"react\";\r\nimport \"./GhostSubscribe.css\";\r\nclass GhostSubscribe extends React.Component {\r\n    render() {\r\n        const { subscribers, blog } = this.props;\r\n        // const subscribeFormPlaceholder = \"Your email address\";\r\n        if (subscribers && blog) {\r\n            // Email subscribe form at the bottom of the page\r\n            return (<section className=\"gh-subscribe\">\n          <h3 className=\"gh-subscribe-title\">Subscribe to {blog.title}</h3>\n          <p>Get the latest posts delivered right to your inbox.</p>\n          <span className=\"gh-subscribe-rss\">\n            or subscribe{\" \"}\n            <a href=\"http://cloud.feedly.com/#subscription/feed/{blog.url}/rss/\">\n              via RSS\n            </a>{\" \"}\n            with Feedly!\n          </span>\n        </section>);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default GhostSubscribe;\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./ReadNext.css\";\r\nconst ReadNextStory = props => {\r\n    const { post } = props;\r\n    if (post) {\r\n        /** Limit words to 19 in GraphQL * */\r\n        const { path, cover, title, excerpt } = post;\r\n        const styles = cover ? { backgroundImage: `url(${cover}` } : null;\r\n        const classes = classNames(\"read-next-story\", props.className, {\r\n            \"no-cover\": !cover\r\n        });\r\n        return (<Link className={classes} style={styles} to={path}>\n        <section className=\"post\">\n          <h2>{title}</h2>\n          <p>{excerpt}&hellip;</p>\n        </section>\n      </Link>);\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Links to Previous/Next posts\r\n */\r\nclass ReadNext extends Component {\r\n    render() {\r\n        const { next, prev } = this.props;\r\n        return (<aside className=\"read-next\">\n        <ReadNextStory post={next}/>\n        <ReadNextStory className=\"prev\" post={prev}/>\n      </aside>);\r\n    }\r\n}\r\nexport default ReadNext;\r\n","import React, { Component } from \"react\";\r\nimport ReactDisqusComments from \"react-disqus-comments\";\r\nimport config from \"../../../data/SiteConfig\";\r\nclass Disqus extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toasts: []\r\n        };\r\n        this.notifyAboutComment = this.notifyAboutComment.bind(this);\r\n        this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\r\n    }\r\n    onSnackbarDismiss() {\r\n        const [, ...toasts] = this.state.toasts;\r\n        this.setState({ toasts });\r\n    }\r\n    notifyAboutComment() {\r\n        const toasts = this.state.toasts.slice();\r\n        toasts.push({ text: \"New comment available!\" });\r\n        this.setState({ toasts });\r\n    }\r\n    render() {\r\n        const { postNode } = this.props;\r\n        if (!config.disqusShortname) {\r\n            return null;\r\n        }\r\n        const post = postNode.frontmatter;\r\n        const url = config.siteUrl + config.pathPrefix + postNode.fields.slug;\r\n        return (<ReactDisqusComments shortname={config.disqusShortname} identifier={post.title} title={post.title} url={url} category_id={post.category_id} onNewComment={this.notifyAboutComment}/>);\r\n    }\r\n}\r\nexport default Disqus;\r\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport MenuButton from \"../components/MenuButton/MenuButton\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainContent from \"../components/MainContent/MainContent\";\nimport PostHeader from \"../components/PostHeader/PostHeader\";\nimport PostFormatting from \"../components/PostFormatting/PostFormatting\";\nimport PostDate from \"../components/PostDate/PostDate\";\nimport PostFooter from \"../components/PostFooter/PostFooter\";\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\nimport AuthorInfo from \"../components/AuthorInfo/AuthorInfo\";\nimport PostShare from \"../components/PostShare/PostShare\";\nimport GhostSubscribe from \"../components/GhostSubscribe/GhostSubscribe\";\nimport ReadNext from \"../components/ReadNext/ReadNext\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport Footer from \"../components/Footer/Footer\";\nimport AuthorModel from \"../models/author-model\";\nimport Disqus from \"../components/Disqus/Disqus\";\nimport Layout from \"../components/layout\";\n\nfunction parsePost(post, slug) {\n  const result = post;\n  if (!result.id) {\n    result.id = slug;\n  }\n  if (!result.id) {\n    result.category_id = config.postDefaultCategoryID;\n  }\n  return result;\n}\n\nconst formatReadNext = value => ({\n  path: value.fields.slug,\n  title: value.frontmatter.title,\n  cover: value.frontmatter.cover,\n  excerpt: value.excerpt\n});\n\nclass PostTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    evt.stopPropagation();\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const { location, data } = this.props;\n    const { slug, next, prev } = this.props.pageContext;\n    const postNode = this.props.data.markdownRemark;\n    const post = parsePost(postNode.frontmatter, slug);\n    const { cover, title, date, author, tags } = post;\n    const className = post.post_class ? post.post_class : \"post\";\n    const authorData = AuthorModel.getAuthor(\n      this.props.data.authors.edges,\n      author,\n      config.blogAuthorId\n    );\n    const getNextData = () => (next ? formatReadNext(data.next) : null);\n    const getPrevData = () => (prev ? formatReadNext(data.prev) : null);\n\n    return (\n      <Layout location={this.props.location}>\n        <Drawer className=\"post-template\" isOpen={this.state.menuOpen}>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n\n          {/* The blog navigation links */}\n          <Navigation config={config} onClose={this.handleOnClose} />\n\n          <SiteWrapper>\n            <MainHeader className=\"post-head\" cover={cover}>\n              <MainNav>\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                <MenuButton\n                  navigation={config.siteNavigation}\n                  onClick={this.handleOnClick}\n                />\n              </MainNav>\n            </MainHeader>\n            <MainContent>\n              <PostFormatting className={className}>\n                <PostHeader>\n                  <h1 className=\"post-title\">{title}</h1>\n                  <section className=\"post-meta\">\n                    <PostDate date={date} />\n                    <PostTags prefix=\" on \" tags={tags} />\n                  </section>\n                </PostHeader>\n\n                <section\n                  className=\"post-content\"\n                  dangerouslySetInnerHTML={{ __html: postNode.html }}\n                />\n\n                <PostFooter>\n                  <AuthorImage author={authorData} />\n                  <AuthorInfo prefix=\"/author\" author={authorData} />\n                  <PostShare\n                    postNode={postNode}\n                    postPath={location.pathname}\n                    config={config}\n                  />\n                  <GhostSubscribe />\n                  <Disqus postNode={postNode} />\n                </PostFooter>\n              </PostFormatting>\n            </MainContent>\n            <ReadNext next={getNextData()} prev={getPrevData()} />\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!, $next: String, $prev: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n        author\n      }\n      fields {\n        slug\n      }\n    }\n    # prev post data\n    prev: markdownRemark(fields: { slug: { eq: $prev } }) {\n      excerpt(pruneLength: 112)\n      frontmatter {\n        title\n        cover\n        date\n      }\n      fields {\n        slug\n      }\n    }\n    # next post data\n    next: markdownRemark(fields: { slug: { eq: $next } }) {\n      excerpt(pruneLength: 112)\n      frontmatter {\n        title\n        cover\n        date\n      }\n      fields {\n        slug\n      }\n    }\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./Drawer.css\";\r\nclass Drawer extends React.Component {\r\n    render() {\r\n        const { children, isOpen, className } = this.props;\r\n        const getClassName = isOpened => (isOpened ? \"nav-opened\" : \"nav-closed\");\r\n        const classes = classNames(className, getClassName(isOpen));\r\n        return <div className={classes}>{children}</div>;\r\n    }\r\n}\r\nexport default Drawer;\r\n","import React from \"react\";\r\nimport \"./SiteWrapper.css\";\r\nclass SiteWrapper extends React.Component {\r\n    render() {\r\n        const { children } = this.props;\r\n        return <div className=\"site-wrapper\">{children}</div>;\r\n    }\r\n}\r\nexport default SiteWrapper;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nclass Footer extends Component {\r\n    render() {\r\n        const PoweredBy = props => {\r\n            const { show } = props;\r\n            if (show) {\r\n                return (<section className=\"poweredby\">\n            Proudly published with <a href=\"https://gatsbyjs.org\">Gatsby</a>\n          </section>);\r\n            }\r\n            return null;\r\n        };\r\n        const { promoteGatsby } = this.props;\r\n        const { label, url, year } = this.props.copyright;\r\n        return (<footer className=\"site-footer clearfix\">\n        <section className=\"copyright\">\n          <a href={url || \"/\"}>{label}</a> &copy;{\" \"}\n          {year || new Date().getFullYear()}\n        </section>\n        <PoweredBy show={promoteGatsby}/>\n      </footer>);\r\n    }\r\n}\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainHeader.css\";\r\nclass MainHeader extends React.Component {\r\n    render() {\r\n        const { children, cover } = this.props;\r\n        const classes = classNames(\"main-header\", this.props.className, {\r\n            \"no-cover\": !cover\r\n        });\r\n        const getStyle = () => {\r\n            if (cover) {\r\n                return { backgroundImage: `url(\"${cover}\")` };\r\n            }\r\n            return null;\r\n        };\r\n        return (<header className={classes} style={getStyle()}>\n        {children}\n      </header>);\r\n    }\r\n}\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainNav.css\";\r\nclass MainNav extends React.Component {\r\n    render() {\r\n        const { children, className } = this.props;\r\n        const formatting = [\"overlay\", \"clearfix\"];\r\n        const classes = classNames(\"main-nav\", formatting, className);\r\n        return <nav className={classes}>{children}</nav>;\r\n    }\r\n}\r\nexport default MainNav;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./BlogLogo.css\";\r\nclass BlogLogo extends Component {\r\n    render() {\r\n        const { logo, url, title } = this.props;\r\n        if (logo) {\r\n            return (<Link className=\"blog-logo\" to={url || \"/\"}>\n          \n          <img src={logo} alt={title}/>\n        </Link>);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default BlogLogo;\r\n","import React, { Component } from \"react\";\r\nimport \"./MenuButton.css\";\r\nclass MenuButton extends Component {\r\n    render() {\r\n        const { navigation, onClick } = this.props;\r\n        if (navigation && onClick) {\r\n            return (<a className=\"menu-button icon-menu\" href=\"#menu\" onClick={onClick}>\n          <span className=\"word\">Menu</span>\n        </a>);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default MenuButton;\r\n","// import FontIcon from \"react-md/lib/FontIcons\";\r\nimport { Link } from \"gatsby\";\r\nfunction GetNavList(config) {\r\n    const NavList = [\r\n        {\r\n            primaryText: \"Home\",\r\n            // LeftIcon: <p>home</p>,\r\n            component: Link,\r\n            to: \"/\"\r\n        },\r\n        {\r\n            divider: true\r\n        }\r\n    ];\r\n    if (config.userLinks) {\r\n        config.userLinks.forEach(link => {\r\n            NavList.push({\r\n                primaryText: link.label,\r\n                // LeftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\r\n                component: \"a\",\r\n                href: link.url\r\n            });\r\n        });\r\n    }\r\n    /*\r\n    NavList.push({ divider: true });\r\n    NavList.push({\r\n        primaryText: \"About\",\r\n        // LeftIcon: <FontIcon>person</FontIcon>,\r\n        component: Link,\r\n        to: \"/about/\"\r\n    }); */\r\n    return NavList;\r\n}\r\nexport default GetNavList;\r\n","import React from \"react\";\r\nimport \"./SubscribeButton.css\";\r\nclass SubscribeButton extends React.Component {\r\n    render() {\r\n        const { url } = this.props;\r\n        if (url) {\r\n            return (<a className=\"subscribe-button icon-feed\" href={url}>\n          Subscribe\n        </a>);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default SubscribeButton;\r\n","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n};\r\nimport React, { Component, createElement, isValidElement } from \"react\";\r\nimport GetNavList from \"./GetNavList\";\r\nimport \"./Navigation.css\";\r\nimport SubscribeButton from \"../SubscribeButton/SubscribeButton\";\r\nconst Divider = () => null;\r\nconst Subheader = props => {\r\n    const { primaryText } = props;\r\n    return <h3>{primaryText}</h3>;\r\n};\r\nconst ListItem = props => {\r\n    const { primaryText, component } = props, remainingProps = __rest(props, [\"primaryText\", \"component\"]);\r\n    return (<li className=\"nav-opened\" role=\"presentation\">\n      {createElement(component, remainingProps, primaryText)}\n    </li>);\r\n};\r\nconst mapToListParts = (item, index) => {\r\n    if (typeof item === \"string\" || typeof item === \"number\") {\r\n        return createElement(ListItem, { key: item, primaryText: item });\r\n    }\r\n    else if (isValidElement(item)) {\r\n        return item;\r\n    }\r\n    const { divider, subheader, nestedItems } = item, remainingProps = __rest(item, [\"divider\", \"subheader\", \"nestedItems\"]);\r\n    let component;\r\n    if (divider) {\r\n        component = Divider;\r\n    }\r\n    else if (subheader) {\r\n        component = Subheader;\r\n    }\r\n    else {\r\n        component = ListItem;\r\n    }\r\n    const props = Object.assign({}, remainingProps, { key: item.key || index });\r\n    if (nestedItems) {\r\n        props.nestedItems = nestedItems.map(mapToListParts);\r\n    }\r\n    return createElement(component, props);\r\n};\r\nclass Navigation extends Component {\r\n    render() {\r\n        const { config, onClose } = this.props;\r\n        const navItems = GetNavList(config);\r\n        return (<div>\n        <div className=\"nav\">\n          <h3 className=\"nav-title\">Menu</h3>\n          <a href=\"#close\" className=\"nav-close\" onClick={onClose}>\n            <span className=\"hidden\">Close</span>\n          </a>\n          <ul>{navItems.map(mapToListParts)}</ul>\n          <SubscribeButton url={config.siteRss}/>\n        </div>\n        <span className=\"nav-cover\"/>\n      </div>);\r\n    }\r\n}\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainContent.css\";\r\nclass MainContent extends React.Component {\r\n    render() {\r\n        const { children } = this.props;\r\n        const classes = classNames(\"content\", this.props.className);\r\n        return (<main id=\"content\" className={classes} role=\"main\">\n        {children}\n      </main>);\r\n    }\r\n}\r\nexport default MainContent;\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../../data/SiteConfig\";\r\nclass SEO extends Component {\r\n    render() {\r\n        const { postNode, postPath, postSEO } = this.props;\r\n        let title;\r\n        let description;\r\n        let image;\r\n        let postURL;\r\n        if (postSEO) {\r\n            const postMeta = postNode.frontmatter;\r\n            title = postMeta.title;\r\n            description = postMeta.description\r\n                ? postMeta.description\r\n                : postNode.excerpt;\r\n            image = postMeta.cover;\r\n            postURL = config.siteUrl + config.pathPrefix + postPath;\r\n        }\r\n        else {\r\n            title = config.siteTitle;\r\n            description = config.siteDescription;\r\n            image = config.siteLogo;\r\n        }\r\n        const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\r\n        image = config.siteUrl + realPrefix + image;\r\n        const blogURL = config.siteUrl + config.pathPrefix;\r\n        const schemaOrgJSONLD = [\r\n            {\r\n                \"@context\": \"http://schema.org\",\r\n                \"@type\": \"WebSite\",\r\n                url: blogURL,\r\n                name: title,\r\n                alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n            }\r\n        ];\r\n        if (postSEO) {\r\n            schemaOrgJSONLD.push([\r\n                {\r\n                    \"@context\": \"http://schema.org\",\r\n                    \"@type\": \"BreadcrumbList\",\r\n                    itemListElement: [\r\n                        {\r\n                            \"@type\": \"ListItem\",\r\n                            position: 1,\r\n                            item: {\r\n                                \"@id\": postURL,\r\n                                name: title,\r\n                                image\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"@context\": \"http://schema.org\",\r\n                    \"@type\": \"BlogPosting\",\r\n                    url: blogURL,\r\n                    name: title,\r\n                    alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n                    headline: title,\r\n                    image: {\r\n                        \"@type\": \"ImageObject\",\r\n                        url: image\r\n                    },\r\n                    description\r\n                }\r\n            ]);\r\n        }\r\n        return (<Helmet>\n        \n        <meta name=\"description\" content={description}/>\n        <meta name=\"image\" content={image}/>\n\n        \n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        \n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL}/>\n        {postSEO ? <meta property=\"og:type\" content=\"article\"/> : null}\n        <meta property=\"og:title\" content={title}/>\n        <meta property=\"og:description\" content={description}/>\n        <meta property=\"og:image\" content={image}/>\n        <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : \"\"}/>\n\n        \n        <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n        <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : \"\"}/>\n        <meta name=\"twitter:title\" content={title}/>\n        <meta name=\"twitter:description\" content={description}/>\n        <meta name=\"twitter:image\" content={image}/>\n      </Helmet>);\r\n    }\r\n}\r\nexport default SEO;\r\n","import React from \"react\";\r\nimport \"./AuthorImage.css\";\r\nclass AuthorImage extends React.Component {\r\n    render() {\r\n        const { name, image, url } = this.props.author;\r\n        if (image) {\r\n            return (<figure className=\"author-image\">\n          <a className=\"img\" href={url} style={{ backgroundImage: `url(\"${image}\")` }}>\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\n          </a>\n        </figure>);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default AuthorImage;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./AuthorMeta.css\";\r\nclass AuthorMeta extends React.Component {\r\n    render() {\r\n        const { children, className } = this.props;\r\n        const classes = classNames(\"author-meta\", className);\r\n        return <div className={classes}>{children}</div>;\r\n    }\r\n}\r\nexport default AuthorMeta;\r\n","import React from \"react\";\r\nclass AuthorLocation extends React.Component {\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location) {\r\n            return <span className=\"author-location icon-location\">{location}</span>;\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default AuthorLocation;\r\n","import React from \"react\";\r\nclass AuthorWebsite extends React.Component {\r\n    render() {\r\n        const { url } = this.props;\r\n        if (url) {\r\n            return (<span className=\"author-link icon-link\">\n          <a href={url}>{url}</a>\n        </span>);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default AuthorWebsite;\r\n"],"sourceRoot":""}