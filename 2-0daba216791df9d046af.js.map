{"version":3,"sources":["webpack:///./data/SiteConfig.js","webpack:///./src/components/PostTags/PostTags.js","webpack:///./src/components/AuthorLink/AuthorLink.js","webpack:///./src/components/PostFormatting/PostFormatting.js","webpack:///./src/components/PostHeader/PostHeader.js","webpack:///./src/components/PostDate/PostDate.js","webpack:///./src/models/author-model.js","webpack:///./src/components/layout.js"],"names":["module","exports","blogPostDir","blogAuthorDir","blogAuthorId","siteTitle","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteCover","siteNavigation","siteBanner","siteBannerUrl","siteRss","siteRssAuthor","sitePaginationLimit","siteSocialUrls","postDefaultCategoryID","userLinks","label","url","iconClassName","copyright","year","themeColor","backgroundColor","promoteGatsby","PostTags","render","_this$props","this","props","prefix","tags","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","map","tag","index","arr","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","_","kebabCase","length","Component","AuthorLink","name","react__WEBPACK_IMPORTED_MODULE_2___default","React","PostFormatting","children","className","PostHeader","PostDate","date","dateTime","moment","Date","format","findName","author","uid","authorEdgesToList","authorEdges","edge","node","AuthorModel","hasAuthor","authorUid","authorList","Boolean","find","getAuthor","fallbackId","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","slice","config","currentPath","location","pathname","replace","title","includes","react__WEBPACK_IMPORTED_MODULE_4___default","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","content"],"mappings":"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","file":"2-0daba216791df9d046af.js","sourcesContent":["module.exports = {\n  blogPostDir: \"posts\", // The name of directory that contains your posts.\n  blogAuthorDir: \"authors\", // The name of directory that contains your 'authors' folder.\n  blogAuthorId: \"katan\", // The default and fallback author ID used for blog posts without a defined author.\n    siteTitle: \"SAP Inside Track Brisbane\", // Site title.\n    siteTitleAlt: \"SAP Inside Track Brisbane\", // Alternative site title for SEO.\n  siteLogo:\n    \"/logos/home.png\", // Logo used for SEO and manifest. e.g. \"/logos/logo-1024.png\",\n  siteUrl: \"https://sitbne.github.\", // sitbneDomain of your website without pathPrefix.\n  pathPrefix: \"io\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-starter-casper/.\n  siteDescription:\n    \"A local grassroots community event organised where SCN members come together to share knowledge, expertise and network\", // Website description used for RSS feeds/meta description tag.\n  siteCover:\n    \"/images/Brisbane-Logo-Very-Plain.jpg\", // Optional, the cover image used in header for home page. e.g: \"/images/blog-cover.jpg\",\n    siteNavigation: true, // If navigation is enabled the Menu button will be visible\n    siteBanner:\"Register now for our upcoming event on February 19th\", // Site Banner \n    siteBannerUrl: \"/february-2020\", //Path to page to navigate from Site Banner\n  siteRss: \"\", //\"/rss.xml\", // Path to the RSS file.\n  siteRssAuthor: \"\", //\"Casper User\", // The author name used in the RSS file\n  // siteFBAppID: \"1825356251115265\", // optional, sets the FB Application ID for using app insights\n  sitePaginationLimit: 5, // The max number of posts per page.\n  //googleAnalyticsID: \"UA-157133488-1\", // GA tracking ID.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // enables Disqus comments, visually deviates from original Casper theme.\n  siteSocialUrls: [\n      \"https://github.com/sitbne\",\n      \"https://twitter.com/search?q=sitbne\",\n      \"mailto:sitbne@gmail.com\"\n  ],\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  // Links to social profiles/projects you want to display in the navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n          url: \"https://github.com/sitbne\",\n      iconClassName: \"fa fa-github\" // Disabled, see Navigation.jsx\n    },\n    {\n      label: \"Twitter\",\n        url: \"https://twitter.com/search?q=sitbne\",\n      iconClassName: \"fa fa-twitter\" // Disabled, see Navigation.jsx\n    },\n    {\n      label: \"Email\",\n        url: \"mailto:sitbne@gmail.com\",\n      iconClassName: \"fa fa-envelope\" // Disabled, see Navigation.jsx\n      }, {\n          label: \"Keen to Speak\",\n        url: \"/keen-to-speak\",\n        iconClassName: \"fa fa-microphone\"\n      }\n  ],\n  // Copyright string for the footer of the website and RSS feed.\n  copyright: {\n    label: \"SAP Inside Track Brisbane\", // Label used before the year\n    year: \"2018\", // optional, set specific copyright year or range of years, defaults to current year\n    url: \"https://sitbne.github.io/\" // optional, set link address of copyright, defaults to site root\n  },\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\", // Used for setting manifest background color.\n  promoteGatsby: true // Enables the GatsbyJS promotion information in footer.\n};\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./PostTags.css\";\r\nclass PostTags extends Component {\r\n    render() {\r\n        const { prefix, tags } = this.props;\r\n        if (tags) {\r\n            return (<span>\n          {prefix}\n          {tags.map((tag, index, arr) => (<span key={tag}>\n              <Link key={tag} to={`/tags/${_.kebabCase(tag)}`}>\n                {tag}\n              </Link>\n              {index !== arr.length - 1 ? \", \" : \"\"}\n            </span>))}\n        </span>);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default PostTags;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./AuthorLink.css\";\r\nclass AuthorLink extends React.Component {\r\n    render() {\r\n        const { name, url } = this.props;\r\n        if (name && url) {\r\n            return <Link to={url}>{name}</Link>;\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport default AuthorLink;\r\n","import React from \"react\";\r\nimport \"./PostFormatting.css\";\r\nclass PostFormatting extends React.Component {\r\n    render() {\r\n        const { children, className } = this.props;\r\n        return <article className={className}>{children}</article>;\r\n    }\r\n}\r\nexport default PostFormatting;\r\n","import React from \"react\";\r\nimport \"./PostHeader.css\";\r\nclass PostHeader extends React.Component {\r\n    render() {\r\n        const { children } = this.props;\r\n        return <header className=\"post-header\">{children}</header>;\r\n    }\r\n}\r\nexport default PostHeader;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./PostDate.css\";\r\nclass PostDate extends React.Component {\r\n    render() {\r\n        const { date } = this.props;\r\n        return (<time className=\"post-date\" dateTime={moment(new Date(date)).format(\"YYYY-MM-DD\")}>\n        {moment(new Date(date)).format(\"DD MMMM YYYY\")}\n      </time>);\r\n    }\r\n}\r\nexport default PostDate;\r\n","const findName = name => author => author.uid === name;\nconst authorEdgesToList = authorEdges => authorEdges.map(edge => edge.node);\n\nclass AuthorModel {\n  static hasAuthor(authorEdges, authorUid) {\n    const authorList = authorEdgesToList(authorEdges);\n    return Boolean(authorList.find(findName(authorUid)));\n  }\n\n  static getAuthor(authorEdges, authorUid, fallbackId) {\n    const authorList = authorEdgesToList(authorEdges);\n    if (this.hasAuthor(authorEdges, authorUid)) {\n      return authorList.find(findName(authorUid));\n    }\n    return authorList.find(findName(fallbackId));\n  }\n}\n\nexport default AuthorModel;\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./layout.css\";\r\nexport default class MainLayout extends React.Component {\r\n    getLocalTitle() {\r\n        function capitalize(string) {\r\n            return string.charAt(0).toUpperCase() + string.slice(1);\r\n        }\r\n        const pathPrefix = config.pathPrefix ? config.pathPrefix : \"/\";\r\n        const currentPath = this.props.location.pathname\r\n            .replace(pathPrefix, \"\")\r\n            .replace(\"/\", \"\");\r\n        let title = \"\";\r\n        if (currentPath === \"\") {\r\n            title = \"Home\";\r\n        }\r\n        else if (currentPath === \"tags/\") {\r\n            title = \"Tags\";\r\n        }\r\n        else if (currentPath === \"categories/\") {\r\n            title = \"Categories\";\r\n        }\r\n        else if (currentPath === \"about/\") {\r\n            title = \"About\";\r\n        }\r\n        else if (currentPath.includes(\"posts\")) {\r\n            title = \"Article\";\r\n        }\r\n        else if (currentPath.includes(\"tags/\")) {\r\n            const tag = currentPath\r\n                .replace(\"tags/\", \"\")\r\n                .replace(\"/\", \"\")\r\n                .replace(\"-\", \" \");\r\n            title = `Tagged in ${capitalize(tag)}`;\r\n        }\r\n        else if (currentPath.includes(\"categories/\")) {\r\n            const category = currentPath\r\n                .replace(\"categories/\", \"\")\r\n                .replace(\"/\", \"\")\r\n                .replace(\"-\", \" \");\r\n            title = `${capitalize(category)}`;\r\n        }\r\n        return title;\r\n    }\r\n    render() {\r\n        const { children } = this.props;\r\n        return (<div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription}/>\n        </Helmet>\n        {children}\n      </div>);\r\n    }\r\n}\r\n"],"sourceRoot":""}